import matplotlib.pyplot as plt

# Scale攻击下不同聚合算法的表现, mal=0.4

# FedAvg
y1 = [33.00,  40.68,  42.84,  17.43,  10.34,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00,  10.00]
# Krum
y2 = [28.50,  28.50,  36.62,  41.62,  41.62,  41.62,  41.62,  40.39,  46.68,  46.68,  46.68,  46.72,  46.72,  46.72,  47.24,  47.86,  47.85,  47.03,  48.60,  49.60,  49.60,  49.74,  50.02,  51.02,  51.12,  51.03,  52.13,  52.79,  52.79,  52.72,  53.02,  53.72,  53.95,  53.95,  53.82]
# Trimmed_mean
y3 = [32.70,  38.83,  43.87,  47.17,  50.12,  51.89,  53.97,  55.40,  56.70,  58.32,  60.32,  59.82,  61.74,  62.40,  62.79,  63.54,  63.86,  64.25,  64.56,  65.04,  64.76,  65.00,  65.23,  64.75,  64.90,  64.77,  65.07,  64.59,  64.60,  64.63,  64.61,  63.67,  64.21,  63.63,  63.46]
# mkrum
y4 = [32.43,  37.23,  41.90,  47.12,  48.38,  50.72,  51.90,  52.25,  53.51,  55.21,  55.57,  56.44,  57.54,  58.36,  59.21,  61.04,  60.95,  61.39,  62.19,  62.73,  62.54,  62.79,  63.05,  62.85,  63.00,  62.87,  61.90,  63.45,  64.33,  64.65,  64.55,  64.54,  65.24,  65.29,  65.54]
# AFA
y5 = [10.72,  10.55,  10.34,  11.50,  12.27,  12.73,  18.33,  20.26,  24.49,  26.17,  30.15,  28.47,  33.42,  37.32,  38.04,  38.63,  41.13,  43.16,  44.44,  44.93,  45.87,  46.34,  46.36,  47.60,  48.60,  49.73,  50.13,  51.01,  51.06,  52.53,  52.92,  53.16,  53.48,  53.90,  54.70]
labels = ['FedAvg', 'Krum', 'Trimmed_mean', 'mKrum', 'AFA']
plt.rcParams['font.sans-serif'] = ['SimHei']

font = {'family': 'Times New Roman',
        'weight': 'normal',
        'size': 12
        }
plt.figure()
plt.ylabel('ACC OF TEST(%)', font)
plt.xlabel('Epoch', font)
plt.plot(y1,'-r', label=labels[0])
plt.plot(y2,'-y', label=labels[1])
plt.plot(y3,'-k', label=labels[2])
plt.plot(y4, '-b', label=labels[3])
plt.plot(y5, '-g', label=labels[4])
plt.legend(loc='right',prop=font)
plt.title("权重放大攻击下使用不同聚合算法的分类准确率")
plt.grid()
plt.show()